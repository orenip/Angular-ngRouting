{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet AuthGuard = class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    //return true -- cargamos la ruta\n    //return false -- no cargamos la ruta\n    let token = sessionStorage.getItem('token');\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\nAuthGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthGuard);\nexport { AuthGuard };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAOnC,IAAMC,SAAS,GAAf,MAAMA,SAAS;EAEpBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAE1B;EAEAC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B;IACA;IAEA,IAAIC,KAAK,GAAEC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAE1C,IAAIF,KAAK,EAAC;MACR,OAAO,IAAI;KACZ,MAAI;MACH,OAAO,KAAK;;EAGhB;CAED;AAvBYN,SAAS,eAHrBD,UAAU,CAAC;EACVU,UAAU,EAAE;CACb,CAAC,GACWT,SAAS,CAuBrB;SAvBYA,SAAS","names":["Injectable","AuthGuard","constructor","router","canActivate","route","state","token","sessionStorage","getItem","providedIn"],"sourceRoot":"","sources":["/home/practicas/Angular/ngRouting/src/app/guards/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router){\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    //return true -- cargamos la ruta\n    //return false -- no cargamos la ruta\n\n    let token= sessionStorage.getItem('token');\n\n    if (token){\n      return true\n    }else{\n      return false;\n    }\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}