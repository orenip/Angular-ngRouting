{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/random-user.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/progress-spinner\";\nfunction ContactsPageComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"mat-spinner\");\n    i0.ɵɵelementStart(2, \"h6\");\n    i0.ɵɵtext(3, \"Cargando...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    data: a0,\n    filtro: a1\n  };\n};\nfunction ContactsPageComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5)(2, \"h6\", 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ContactsPageComponent_div_3_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const contacto_r5 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.volverHome(contacto_r5));\n    });\n    i0.ɵɵtext(5, \"Seleccionar como amigo Invisible\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const contacto_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"routerLink\", contacto_r5.id.name);\n    i0.ɵɵproperty(\"state\", i0.ɵɵpureFunction2(4, _c0, contacto_r5, ctx_r1.filtroSexo));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", contacto_r5.name.first, \" \", contacto_r5.name.last, \" \");\n  }\n}\nfunction ContactsPageComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Mostrando lista filtrada por: \\\"\", ctx_r2.filtroSexo, \"\\\"\");\n  }\n}\nfunction ContactsPageComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Mostrando lista de contactos completa\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ContactsPageComponent = /*#__PURE__*/(() => {\n  class ContactsPageComponent {\n    constructor(router, route,\n    //private contactService: ContactsService,\n    randomUserService) {\n      this.router = router;\n      this.route = route;\n      this.randomUserService = randomUserService;\n      this.cargando = true;\n      this.filtroSexo = 'todos';\n      //listaContactos: IContacto[]=[];\n      this.listaRandomContacts = [];\n    }\n    ngOnInit() {\n      //Obtener los Query Params\n      this.route.queryParams.subscribe(params => {\n        console.log('QueryParams:', params.sexo);\n        if (params.sexo) {\n          this.filtroSexo = params.sexo;\n          if (params.sexo === 'female' || params.sexo === 'male') {\n            //Implementación para obtener la lista de contactos aleatoria\n            this.randomUserService.obtenerRandomContacts(10, params.sexo).subscribe({\n              next: response => {\n                console.log(response), response.results.forEach((randomContact, index) => {\n                  this.listaRandomContacts.push(randomContact);\n                });\n                console.log(this.listaRandomContacts);\n                this.cargando = false;\n              },\n              error: error => console.error(`${error}`),\n              complete: () => {\n                console.info('Petición de random contacts terminada');\n                this.cargando = false;\n              }\n            });\n          } else {\n            //Implementación para obtener la lista de contactos aleatoria\n            this.randomUserService.obtenerRandomContacts(10).subscribe({\n              next: response => {\n                console.log(response), response.results.forEach((randomContact, index) => {\n                  this.listaRandomContacts.push(randomContact);\n                });\n                console.log(this.listaRandomContacts);\n              },\n              error: error => console.error(`${error}`),\n              complete: () => {\n                console.info('Petición de random contacts terminada');\n                this.cargando = false;\n              }\n            });\n          }\n          //Obtener lista de contactos\n          /*this.contactService.obtenerContactos(this.filtroSexo).then(\n          (lista)=> this.listaContactos = lista)\n          .catch((error)=> console.error(`Ha habido un error al obtener los contactos: ${error}`))\n           .finally(()=> console.info('Petición de contactos terminada'))\n          */\n        }\n      });\n    }\n    //Ejemplo de paso de información entre componentes del ESTADO\n    volverHome(contacto) {\n      let navigationExtras = {\n        state: {\n          data: contacto\n        }\n      };\n      this.router.navigate(['/dashboard'], navigationExtras);\n    }\n  }\n  ContactsPageComponent.ɵfac = function ContactsPageComponent_Factory(t) {\n    return new (t || ContactsPageComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.RandomUserService));\n  };\n  ContactsPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactsPageComponent,\n    selectors: [[\"app-contacts-page\"]],\n    decls: 9,\n    vars: 4,\n    consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\", \"ngIfElse\"], [\"completo\", \"\"], [\"routerLink\", \"/dashboard\"], [3, \"routerLink\", \"state\"], [1, \"contacto\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function ContactsPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Tus contactos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, ContactsPageComponent_div_2_Template, 4, 0, \"div\", 0);\n        i0.ɵɵtemplate(3, ContactsPageComponent_div_3_Template, 6, 7, \"div\", 1);\n        i0.ɵɵtemplate(4, ContactsPageComponent_ng_container_4_Template, 3, 1, \"ng-container\", 2);\n        i0.ɵɵtemplate(5, ContactsPageComponent_ng_template_5_Template, 2, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(7, \"a\", 4);\n        i0.ɵɵtext(8, \"Volver\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(6);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.listaRandomContacts.length == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listaRandomContacts);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filtroSexo == \"female\" || ctx.filtroSexo == \"male\")(\"ngIfElse\", _r3);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.RouterLink, i4.MatButton, i5.MatProgressSpinner],\n    styles: [\".contacto[_ngcontent-%COMP%]{font-size:large}.contacto[_ngcontent-%COMP%]:hover{cursor:pointer;color:tomato}\"]\n  });\n  return ContactsPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}