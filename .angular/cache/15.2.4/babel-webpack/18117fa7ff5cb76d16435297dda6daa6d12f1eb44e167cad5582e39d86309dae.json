{"ast":null,"code":"import { LISTA_CONTACTOS } from './../mock/contacts.mock';\nimport * as i0 from \"@angular/core\";\nexport class ContactsService {\n  constructor() {\n    this.listaContactos = LISTA_CONTACTOS;\n  }\n  obtenerContactos(sexo) {\n    if (sexo == 'hombre' || sexo == 'mujer') {\n      let listaFiltrada = this.listaContactos.filter(contacto => contacto.sexo == sexo);\n      return Promise.resolve(listaFiltrada);\n    } else if (sexo == 'todos') {\n      return Promise.resolve(this.listaContactos);\n    } else {\n      return Promise.reject('Filtro no válido');\n    }\n  }\n}\nContactsService.ɵfac = function ContactsService_Factory(t) {\n  return new (t || ContactsService)();\n};\nContactsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContactsService,\n  factory: ContactsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,eAAe,QAAQ,yBAAyB;;AAOzD,OAAM,MAAOC,eAAe;EAI1BC;IAFA,mBAAc,GAAgBF,eAAe;EAE9B;EAEfG,gBAAgB,CAACC,IAAY;IAE3B,IAAGA,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAE,OAAO,EAAC;MAEnC,IAAIC,aAAa,GAAgB,IAAI,CAACC,cAAc,CAACC,MAAM,CAAEC,QAAQ,IAAIA,QAAQ,CAACJ,IAAI,IAAGA,IAAI,CAAC;MAC9F,OAAOK,OAAO,CAACC,OAAO,CAACL,aAAa,CAAC;KAEtC,MAAK,IAAGD,IAAI,IAAE,OAAO,EAAC;MACrB,OAAOK,OAAO,CAACC,OAAO,CAAC,IAAI,CAACJ,cAAc,CAAC;KAC5C,MAAK;MACJ,OAAOG,OAAO,CAACE,MAAM,CAAC,kBAAkB,CAAC;;EAG7C;;AAnBWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAW,SAAfX,eAAe;EAAAY,YAFd;AAAM","names":["LISTA_CONTACTOS","ContactsService","constructor","obtenerContactos","sexo","listaFiltrada","listaContactos","filter","contacto","Promise","resolve","reject","factory","providedIn"],"sourceRoot":"","sources":["/home/practicas/Angular/ngRouting/src/app/services/contacts.service.ts"],"sourcesContent":["import { LISTA_CONTACTOS } from './../mock/contacts.mock';\nimport { IContacto } from './../models/contact.interface';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactsService {\n\n  listaContactos: IContacto[] = LISTA_CONTACTOS;\n\n  constructor() {}\n\n  obtenerContactos(sexo?:string): Promise<IContacto[]>{\n\n    if(sexo == 'hombre' || sexo=='mujer'){\n\n      let listaFiltrada: IContacto[] = this.listaContactos.filter((contacto)=> contacto.sexo== sexo);\n      return Promise.resolve(listaFiltrada);\n\n    }else if(sexo=='todos'){\n      return Promise.resolve(this.listaContactos);\n    } else{\n      return Promise.reject('Filtro no válido')\n    }\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}