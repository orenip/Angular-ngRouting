{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/contacts.service\";\nimport * as i3 from \"@angular/common\";\nfunction ContactsPageComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"h6\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ContactsPageComponent_div_2_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const contacto_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.volverHome(contacto_r1));\n    });\n    i0.ɵɵtext(5, \"Seleccionar como amigo Invisible\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const contacto_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"routerLink\", contacto_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", contacto_r1.nombre, \" \");\n  }\n}\nexport class ContactsPageComponent {\n  constructor(router, route, contactService) {\n    this.router = router;\n    this.route = route;\n    this.contactService = contactService;\n    this.filtroSexo = 'todos';\n    this.listaContactos = [];\n  }\n  ngOnInit() {\n    //Obtener los Query Params\n    this.route.queryParams.subscribe(params => {\n      console.log('QueryParams:', params.sexo);\n      if (params.sexo) {\n        this.filtroSexo = params.sexo;\n      }\n      //Obtener lista de contactos\n      this.contactService.obtenerContactos(this.filtroSexo).then(lista => this.listaContactos = lista).catch(error => console.error(`Ha habido un error al obtener los contactos: ${error}`)).finally(() => console.info('Petición de contactos terminada'));\n    });\n  }\n  //Ejemplo de paso de información entre componentes del ESTADO\n  volverHome(contacto) {\n    let navigationExtras = {\n      state: {\n        data: contacto\n      }\n    };\n    this.router.navigate(['/home'], navigationExtras);\n  }\n}\nContactsPageComponent.ɵfac = function ContactsPageComponent_Factory(t) {\n  return new (t || ContactsPageComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ContactsService));\n};\nContactsPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactsPageComponent,\n  selectors: [[\"app-contacts-page\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"], [3, \"click\"]],\n  template: function ContactsPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Tus contactos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ContactsPageComponent_div_2_Template, 6, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listaContactos);\n    }\n  },\n  dependencies: [i3.NgForOf, i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAIAA,2BAA0D;IAElDA,YAAoB;IAAAA,iBAAK;IAC7BA,iCAAuC;IAA/BA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAoB;IAAA,EAAC;IAACA,gDAAgC;IAAAA,iBAAS;;;;IAF7EA,eAA4B;IAA5BA,sDAA4B;IAC3BA,eAAoB;IAApBA,kDAAoB;;;ACI5B,OAAM,MAAOC,qBAAqB;EAKhCC,YAAoBC,MAAc,EAAUC,KAAqB,EAAUC,cAA+B;IAAtF,WAAM,GAANF,MAAM;IAAkB,UAAK,GAALC,KAAK;IAA0B,mBAAc,GAAdC,cAAc;IAHzF,eAAU,GAAU,OAAO;IAC3B,mBAAc,GAAc,EAAE;EAI9B;EAEAC,QAAQ;IAIN;IACA,IAAI,CAACF,KAAK,CAACG,WAAW,CAACC,SAAS,CAAEC,MAAW,IAAI;MAC/CC,OAAO,CAACC,GAAG,CAAC,cAAc,EAACF,MAAM,CAACG,IAAI,CAAC;MACvC,IAAGH,MAAM,CAACG,IAAI,EAAC;QACX,IAAI,CAACC,UAAU,GAAEJ,MAAM,CAACG,IAAI;;MAEhC;MACA,IAAI,CAACP,cAAc,CAACS,gBAAgB,CAAC,IAAI,CAACD,UAAU,CAAC,CAACE,IAAI,CACvDC,KAAK,IAAI,IAAI,CAACC,cAAc,GAAGD,KAAK,CAAC,CACrCE,KAAK,CAAEC,KAAK,IAAIT,OAAO,CAACS,KAAK,CAAC,gDAAgDA,KAAK,EAAE,CAAC,CAAC,CACvFC,OAAO,CAAC,MAAKV,OAAO,CAACW,IAAI,CAAC,iCAAiC,CAAC,CAAC;IAElE,CAAC,CAAC;EAEJ;EACA;EACAC,UAAU,CAACC,QAAmB;IAE5B,IAAIC,gBAAgB,GAAmB;MACrCC,KAAK,EAAE;QACLC,IAAI,EAAEH;;KAGT;IACD,IAAI,CAACpB,MAAM,CAACwB,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAEH,gBAAgB,CAAC;EACnD;;AAtCWvB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVlChC,0BAAI;MAAAA,6BAAa;MAAAA,iBAAK;MAItBA,sEAKM;;;MALoBA,eAAmB;MAAnBA,4CAAmB","names":["i0","ContactsPageComponent","constructor","router","route","contactService","ngOnInit","queryParams","subscribe","params","console","log","sexo","filtroSexo","obtenerContactos","then","lista","listaContactos","catch","error","finally","info","volverHome","contacto","navigationExtras","state","data","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/practicas/Angular/ngRouting/src/app/pages/contacts-page/contacts-page.component.html","/home/practicas/Angular/ngRouting/src/app/pages/contacts-page/contacts-page.component.ts"],"sourcesContent":["<h1>Tus contactos</h1>\n\n<!-- Listar los contactos y poder navegar al pinchar en uno de ellos al detalle -->\n\n<div *ngFor=\"let contacto of listaContactos; let i=index\">\n  <div routerLink=\"{{contacto.id}}\">  <!--[state]=\"contacto\" // También se puede incorporar detras de id}}\" ....-->\n    <h6>{{contacto.nombre}} </h6>\n    <button (click)=\"volverHome(contacto)\">Seleccionar como amigo Invisible</button>\n  </div>\n</div>\n","import { NavigationExtras, Router, ActivatedRoute } from '@angular/router';\nimport { IContacto } from './../../models/contact.interface';\nimport { Component, OnInit } from '@angular/core';\nimport { ContactsService } from 'src/app/services/contacts.service';\n\n@Component({\n  selector: 'app-contacts-page',\n  templateUrl: './contacts-page.component.html',\n  styleUrls: ['./contacts-page.component.scss']\n})\nexport class ContactsPageComponent implements OnInit{\n\n  filtroSexo: string= 'todos';\n  listaContactos: IContacto[]=[];\n\n  constructor(private router: Router, private route: ActivatedRoute, private contactService: ContactsService){\n\n  }\n\n  ngOnInit(): void {\n\n\n\n    //Obtener los Query Params\n    this.route.queryParams.subscribe((params: any) =>{\n      console.log('QueryParams:',params.sexo)\n      if(params.sexo){\n          this.filtroSexo= params.sexo\n      }\n      //Obtener lista de contactos\n      this.contactService.obtenerContactos(this.filtroSexo).then(\n        (lista)=> this.listaContactos = lista)\n        .catch((error)=> console.error(`Ha habido un error al obtener los contactos: ${error}`))\n        .finally(()=> console.info('Petición de contactos terminada'))\n\n    });\n\n  }\n  //Ejemplo de paso de información entre componentes del ESTADO\n  volverHome(contacto: IContacto){\n\n    let navigationExtras: NavigationExtras={\n      state: {\n        data: contacto\n      }\n\n    }\n    this.router.navigate(['/home'], navigationExtras)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}