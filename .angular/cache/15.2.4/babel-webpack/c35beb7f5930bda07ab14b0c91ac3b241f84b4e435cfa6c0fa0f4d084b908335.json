{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, retry, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RandomUserService = /*#__PURE__*/(() => {\n  class RandomUserService {\n    constructor(http) {\n      this.http = http;\n    }\n    handleError(error) {\n      if (error.status === 0) {\n        console.error(`Ha ocurrido un error: ${error.error}`);\n      } else {\n        console.error(`Error en el backend: ${error.status}. El error es: ${error.error} `);\n      }\n      return throwError(() => new Error('Error rn la petición de contacto aleatorio'));\n    }\n    obtenerRandomContact() {\n      return this.http.get('https://randomuser.me/api').pipe(retry(2),\n      //Nº de reintentos de peticiones\n      catchError(this.handleError) //sacamos error se algo falla\n      );\n    }\n\n    obtenerRandomContacts(n, sexo) {\n      let params = new HttpParams().set(\"results\", n);\n      if (sexo) {\n        params = params.append(\"gender\", sexo);\n      }\n      return this.http.get('https://randomuser.me/api', {\n        params: params\n      }).pipe(retry(2),\n      //Nº de reintentos de peticiones\n      catchError(this.handleError) //sacamos error se algo falla\n      );\n    }\n  }\n\n  RandomUserService.ɵfac = function RandomUserService_Factory(t) {\n    return new (t || RandomUserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  RandomUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RandomUserService,\n    factory: RandomUserService.ɵfac,\n    providedIn: 'root'\n  });\n  return RandomUserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}