{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nfunction LoginFormComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El campo email es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginFormComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El formato email no es correcto \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginFormComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El campo email es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\n//Importamos lo necesario para construir el formulario\nexport let LoginFormComponent = /*#__PURE__*/(() => {\n  class LoginFormComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.loginForm = new FormGroup({});\n      this.loginAction = new EventEmitter();\n    }\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        email: ['', Validators.compose([Validators.required, Validators.email])],\n        password: ['', Validators.required]\n      });\n    }\n    get email() {\n      return this.loginForm.get('email');\n    }\n    get password() {\n      return this.loginForm.get('password');\n    }\n    //Submit del formulario de Login\n    submitLogin() {\n      if (this.loginForm.valid) {\n        console.table(this.loginForm.value);\n        this.loginAction.emit(this.loginForm.value);\n        //TODO petición a authService\n        this.loginForm.reset();\n      }\n    }\n  }\n  LoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n    return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  LoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginFormComponent,\n    selectors: [[\"app-login-form\"]],\n    outputs: {\n      loginAction: \"loginAction\"\n    },\n    decls: 17,\n    vars: 5,\n    consts: [[3, \"formGroup\", \"submit\"], [\"matInput\", \"\", \"placeholder\", \"Email\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\"]],\n    template: function LoginFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\")(2, \"mat-card-title\");\n        i0.ɵɵtext(3, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n        i0.ɵɵtext(5, \" Accede a tu cuenta \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function LoginFormComponent_Template_form_submit_7_listener() {\n          return ctx.submitLogin();\n        });\n        i0.ɵɵelementStart(8, \"mat-form-field\");\n        i0.ɵɵelement(9, \"input\", 1);\n        i0.ɵɵtemplate(10, LoginFormComponent_mat_error_10_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵtemplate(11, LoginFormComponent_mat_error_11_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\");\n        i0.ɵɵelement(13, \"input\", 3);\n        i0.ɵɵtemplate(14, LoginFormComponent_mat_error_14_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 4);\n        i0.ɵɵtext(16, \"Login\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (ctx.email == null ? null : ctx.email.errors == null ? null : ctx.email.errors[\"required\"]) && (ctx.email == null ? null : ctx.email.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.email == null ? null : ctx.email.errors == null ? null : ctx.email.errors[\"email\"]) && (ctx.email == null ? null : ctx.email.touched));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.errors == null ? null : ctx.password.errors[\"required\"]) && (ctx.password == null ? null : ctx.password.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.MatButton, i4.MatCard, i4.MatCardContent, i4.MatCardHeader, i4.MatCardSubtitle, i4.MatCardTitle, i5.MatInput, i6.MatFormField, i6.MatError],\n    styles: [\"[_nghost-%COMP%]{display:flex;justify-content:center;margin:100px 0}mat-card[_ngcontent-%COMP%]{max-width:400px;margin:2em auto;text-align:center}mat-card-header[_ngcontent-%COMP%]{display:unset}mat-card-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center}mat-form-field[_ngcontent-%COMP%]{display:block;min-width:300px;width:100%}\"]\n  });\n  return LoginFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}