{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthGuard {\n  canActivate(route, state) {\n    //return true -- cargamos la ruta\n    //return false -- no cargamos la ruta\n    let token = sessionStorage.getItem('token');\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)();\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,SAAS;EAIpBC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B;IACA;IAEA,IAAIC,KAAK,GAAEC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAE1C,IAAIF,KAAK,EAAC;MACR,OAAO,IAAI;KACZ,MAAI;MACH,OAAO,KAAK;;EAGhB;;AAnBWJ,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAO,SAATP,SAAS;EAAAQ,YAFR;AAAM","names":["AuthGuard","canActivate","route","state","token","sessionStorage","getItem","factory","providedIn"],"sourceRoot":"","sources":["/home/practicas/Angular/ngRouting/src/app/guards/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router:)\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    //return true -- cargamos la ruta\n    //return false -- no cargamos la ruta\n\n    let token= sessionStorage.getItem('token');\n\n    if (token){\n      return true\n    }else{\n      return false;\n    }\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}